"""Pen calculating 0th, 1st, and 2nd moments of area of glyph shapes.
This is low-level, autogenerated pen. Use statisticsPen instead."""
from fontTools.pens.basePen import BasePen


__all__ = ["MomentsPen"]


class OpenContourError(NotImplementedError):
    pass


class MomentsPen(BasePen):

	def __init__(self, glyphset=None):
		BasePen.__init__(self, glyphset)

		self.Area = 0
		self.Planar1stMomentWrtX = 0
		self.Planar1stMomentWrtY = 0
		self.Planar2ndMomentWrtX = 0
		self.Planar2ndMomentWrtY = 0
		self.ProductMomentXY = 0

	def _moveTo(self, p0):
		self.__startPoint = p0

	def _closePath(self):
		p0 = self._getCurrentPoint()
		if p0 != self.__startPoint:
			self._lineTo(self.__startPoint)

	def _endPath(self):
		p0 = self._getCurrentPoint()
		if p0 != self.__startPoint:
			raise OpenContourError(
					"Green theorem is not defined on open contours."
			)

	def _lineTo(self, p1):
		x0,y0 = self._getCurrentPoint()
		x1,y1 = p1

		r0 = x1*y0
		r1 = x1*y1
		r2 = y0**2
		r3 = y1**2
		r4 = y0*y1
		r5 = x1**2
		r6 = 2*r5
		r7 = x0**2
		r8 = y0 - y1
		r9 = r8*x0
		r10 = y0**3
		r11 = y1**3
		r12 = x1**3

		self.Area += -r0/2 - r1/2 + x0*(y0 + y1)/2
		self.Planar1stMomentWrtX += -r0*y1/6 - r2*x1/6 - r3*x1/6 + x0*(r2 + r3 + r4)/6
		self.Planar1stMomentWrtY += -r5*y0/6 - r6*y1/6 + r7*(2*y0 + y1)/6 - r9*x1/6
		self.Planar2ndMomentWrtX += -r0*r3/12 - r1*r2/12 - r10*x1/12 - r11*x1/12 + x0*(r10 + r11 + r2*y1 + r3*y0)/12
		self.Planar2ndMomentWrtY += -r12*y0/12 - r12*y1/4 - r5*r9/12 - r7*r8*x1/12 + x0**3*(3*y0 + y1)/12
		self.ProductMomentXY += -r2*r5/24 - r3*r5/8 - r4*r6/24 + r7*(3*r2 + r3 + 2*r4)/24 - x0*x1*(r2 - r3)/12

	def _qCurveToOne(self, p1, p2):
		x0,y0 = self._getCurrentPoint()
		x1,y1 = p1
		x2,y2 = p2

		r0 = 2*x1
		r1 = r0*y2
		r2 = 2*y1
		r3 = r2*x2
		r4 = x2*y2
		r5 = 3*r4
		r6 = 3*y0
		r7 = 4*y1
		r8 = r4*r7
		r9 = y1**2
		r10 = 2*r9
		r11 = y2**2
		r12 = r11*x2
		r13 = 5*r12
		r14 = 2*y2
		r15 = y0**2
		r16 = 4*x1
		r17 = r2*x1 + r4
		r18 = y0*y2
		r19 = 5*r15
		r20 = x1**2
		r21 = x2**2
		r22 = 10*y2
		r23 = r0*x2
		r24 = x0**2
		r25 = x2*y0
		r26 = 8*y1**3
		r27 = y2**3
		r28 = 30*y1
		r29 = 20*r9
		r30 = y0**3
		r31 = 6*x1
		r32 = 4*r9
		r33 = 15*r11
		r34 = 10*y1
		r35 = x1*y1
		r36 = 20*r35 + r5
		r37 = 12*r9
		r38 = 12*y1
		r39 = r13 + 8*r9*x1
		r40 = 8*x1**3
		r41 = x2**3
		r42 = 6*y1
		r43 = 10*r21*x1
		r44 = 5*y2
		r45 = 4*r20
		r46 = 12*r20
		r47 = 30*x1
		r48 = 12*x1
		r49 = 20*r20
		r50 = 8*r20*y1
		r51 = r21*r44
		r52 = 60*y1
		r53 = 12*r35

		self.Area += r1/6 - r3/6 - r5/6 + x0*(r2 + r6 + y2)/6 - y0*(r0 + x2)/6
		self.Planar1stMomentWrtX += r1*(r14 + y1)/30 - r10*x2/30 - r13/30 - r15*(r16 + x2)/30 - r8/30 + x0*(r10 + r11 + r18 + r19 + r2*y2 + r7*y0)/30 - y0*(r17 + r3)/30
		self.Planar1stMomentWrtY += r14*r20/30 - r21*r22/30 - r21*r7/30 - r23*(-r14 + y1)/30 + r24*(r7 + 10*y0 + y2)/30 + x0*(r1 - r16*y0 + r17 - r25)/30 - y0*(2*r20 + r21 + r23)/30
		self.Planar2ndMomentWrtX += r1*(r22*y1 + r32 + r33)/420 - r12*r28/420 - r15*(r1 + r34*x2 + r36)/420 - r26*x2/420 - r27*x2/12 - r29*r4/420 - r30*(r31 + x2)/84 + x0*(r11*r34 + r11*r6 + r15*r28 + r18*r38 + r19*y2 + r26 + 5*r27 + r29*y0 + 35*r30 + r37*y2)/420 - y0*(-r0*r11 + r37*x2 + r38*r4 + r39)/420
		self.Planar2ndMomentWrtY += r24*(r22*x1 - 5*r25 + r3 + r36 - r47*y0)/420 - r28*r41/420 + r40*y2/420 - r41*y2/4 - r43*(r2 - 3*y2)/420 - r45*x2*(r2 - r44)/420 + x0**3*(r42 + 21*y0 + y2)/84 - x0*(r2*r21 + r21*r6 + r25*r48 - r4*r48 - r46*y2 + r49*y0 - r50 - r51)/420 - y0*(r40 + 5*r41 + r43 + r46*x2)/420
		self.ProductMomentXY += -r11*r21/8 - r15*(3*r21 + r48*x2 + r49)/840 - r16*x2*(r32 - r33)/840 - r21*r29/840 - r21*r52*y2/840 + r24*(3*r11 + 105*r15 + 10*r18 + r29 + r38*y2 + r52*y0)/840 + r45*y2*(r44 + r7)/840 + x0*(r11*r31 - r15*r47 + r16*r18 - r19*x2 - r25*r7 + r39 + r53*y2 + r8)/420 - y0*(r16*r4 + r21*r42 + r50 + r51 + r53*x2)/420

	def _curveToOne(self, p1, p2, p3):
		x0,y0 = self._getCurrentPoint()
		x1,y1 = p1
		x2,y2 = p2
		x3,y3 = p3

		r0 = 6*x2
		r1 = r0*y3
		r2 = 6*y2
		r3 = r2*x3
		r4 = 10*y3
		r5 = r4*x3
		r6 = 3*x1
		r7 = 3*y1
		r8 = 6*x1
		r9 = 3*x2
		r10 = 6*y1
		r11 = 3*y2
		r12 = x3*y2
		r13 = r12*y3
		r14 = y2**2
		r15 = 45*r14
		r16 = r15*x3
		r17 = y3**2
		r18 = r17*x3
		r19 = 7*y3
		r20 = 15*y3
		r21 = r20*x2
		r22 = y1**2
		r23 = 9*r22
		r24 = y0**2
		r25 = 21*x1
		r26 = 15*y2
		r27 = r26*x3
		r28 = 9*x2
		r29 = r28*y2 + r5
		r30 = 9*y2
		r31 = r10*y3
		r32 = r26*y3
		r33 = 9*r14
		r34 = r9*y3
		r35 = 3*y3
		r36 = 12*x3
		r37 = 15*x3
		r38 = 45*y1
		r39 = 5*x3
		r40 = r39*y3
		r41 = x2*y2
		r42 = 18*r41
		r43 = 45*x1
		r44 = r40 + r42 + r43*y1
		r45 = 105*y0
		r46 = 30*y0
		r47 = r46*y2
		r48 = 5*y3
		r49 = 12*y3
		r50 = 45*r22
		r51 = 5*r17
		r52 = x2**2
		r53 = 45*r52
		r54 = r53*y3
		r55 = x3**2
		r56 = r55*y2
		r57 = r55*y3
		r58 = r37*x2
		r59 = x1**2
		r60 = 9*r59
		r61 = x0**2
		r62 = 21*y1
		r63 = 9*r52
		r64 = r21 - r28*y1
		r65 = 45*r59
		r66 = 5*r55
		r67 = r11*x3
		r68 = r46*x2
		r69 = y2**3
		r70 = 126*x3
		r71 = y3**3
		r72 = 630*y2
		r73 = 378*r14
		r74 = x3*y3
		r75 = y1**3
		r76 = y0**3
		r77 = 126*x2
		r78 = r19*x3 + r26*x2
		r79 = r17*x2
		r80 = 63*r14
		r81 = 27*r14
		r82 = 42*r18 + r81*x2
		r83 = 21*r12
		r84 = 42*y2
		r85 = 42*y1
		r86 = x2*y1
		r87 = 63*r41
		r88 = x1*y1
		r89 = r40 + r87 + 378*r88
		r90 = 27*y2
		r91 = y2*y3
		r92 = 54*y1
		r93 = r17*r62 + r80*y3
		r94 = r17*x1
		r95 = 63*x3
		r96 = 189*r22
		r97 = x1*y2
		r98 = 30*y3
		r99 = 18*r88
		r100 = r98*x3
		r101 = 90*y1
		r102 = 162*r41
		r103 = r15*x2 + 14*r18 + 126*r22*x1 + r86*r98
		r104 = 14*r24
		r105 = 126*r24
		r106 = 378*r22
		r107 = 630*r24
		r108 = y0*y3
		r109 = 252*y2
		r110 = r109*y0
		r111 = x2**3
		r112 = 126*y3
		r113 = x3**3
		r114 = x1**3
		r115 = r55*x2
		r116 = 63*r52
		r117 = r116*x3
		r118 = x1*y0
		r119 = x3*y0
		r120 = x2*y3
		r121 = 21*r120
		r122 = 42*x1
		r123 = r86*x3
		r124 = r120*x3
		r125 = r52*r90
		r126 = 42*r57
		r127 = x2*x3
		r128 = 90*x1
		r129 = 189*r59
		r130 = 378*r59
		r131 = r52*y1
		r132 = r55*y1
		r133 = 252*x2
		r134 = 42*x3
		r135 = 30*r12*x1 + r53*y2 + 14*r57 + 126*r59*y1
		r136 = 18*y1
		r137 = 54*r41
		r138 = 54*r88

		self.Area += r1/20 - r3/20 - r5/20 + r6*(y2 + y3)/20 - r7*(x2 + x3)/20 + x0*(r10 + r11 + 10*y0 + y3)/20 - y0*(r8 + r9 + x3)/20
		self.Planar1stMomentWrtX += -r13/8 - r16/840 - r18/6 + r21*(r11 + r19)/840 - r23*(r9 + 2*x3)/840 - r24*(r0 + r25 + x3)/168 + r6*(10*r17 + r30*y1 + r31 + r32 + r33)/840 - r7*(r27 + r29)/840 + x0*(18*r14 + 140*r24 + r32 + r38*y2 + r45*y1 + r47 + r48*y0 + r49*y1 + r50 + r51)/840 - y0*(r34 - r35*x1 + r36*y2 + r37*y1 + r38*x2 + r44)/840
		self.Planar1stMomentWrtY += r54/840 - r56/8 - r57/3 - r58*(r11 - r19)/840 + r6*(-r10*x3 + r29 + r64)/840 + r60*(r11 + 2*y3)/840 + r61*(r2 + r62 + 56*y0 + y3)/168 - r7*(10*r55 + r58 + r63)/840 + x0*(r20*x1 - r39*y0 + r43*y2 + r44 - r45*x1 + r49*x2 + r67 - r68 - r7*x3)/840 - y0*(r36*x1 + r43*x2 + 18*r52 + r58 + r65 + r66)/840
		self.Planar2ndMomentWrtX += -r18*r72/9240 - r23*(r27 + r34 + r78)/9240 - r24*(r28*y3 + r83 + r84*x1 + r85*x3 + 210*r86 + r89)/9240 + r6*(r14*r38 + 70*r17*y2 + r20*r22 + r22*r90 + 27*r69 + 42*r71 + r91*r92 + r93)/9240 - r69*r70/9240 - r7*(84*r13 - 14*r79 + r80*x3 + r82)/9240 - r71*x3/12 - r73*r74/9240 - 3*r75*(r28 + r39)/3080 - r76*(r28 + r43 + x3)/660 + r77*y3*(r11*y3 + r14 + r51)/9240 + x0*(r101*r91 + r104*y3 + r105*y2 + r106*y0 + r107*y1 + r108*r85 + r110*y1 + 135*r14*y1 + r17*r84 + r47*y3 + r50*y3 + r51*y0 + 45*r69 + 14*r71 + 126*r75 + 770*r76 + r80*y0 + r93 + r96*y2)/9240 - y0*(r100*y1 + r101*r12 + r102*y1 + r103 + r16 + r22*r95 + r42*y3 + r74*r84 - r81*x1 - 9*r94 + r96*x2 - r97*r98 - r99*y3)/9240
		self.Planar2ndMomentWrtY += r111*r112/9240 - r113*r72/9240 - r113*y3/4 + 3*r114*(r30 + r48)/3080 - r52*r70*(-r35 + y2)/9240 - r55*r77*(r11 - r48)/9240 - r6*(-r116*y3 + 54*r123 - 84*r124 - r125 - r126 + r38*r52 + r55*r62 + 14*r56)/9240 + r60*(-r39*y1 + r64 + r67 + r78)/9240 + r61*(-630*r118 - 14*r119 + r121 + r122*y3 + r30*x3 - r77*y0 + r85*x2 + r89 + 210*r97)/9240 - r7*(27*r111 + 42*r113 + 70*r115 + r117)/9240 + x0**3*(r30 + r38 + 165*y0 + y3)/660 + x0*(r100*x1 + r102*x1 - r116*y0 - r118*r133 - r118*r134 + r120*r128 + r120*r134 - 30*r123 + r129*y2 - r130*y0 - 27*r131 - 9*r132 + r135 + r42*x3 + r54 + 63*r59*y3 - r66*y0 - r68*x3 - r99*x3)/9240 - y0*(45*r111 + 14*r113 + 126*r114 + 42*r115 + r117 + r127*r128 + r129*x2 + r25*r55 + 135*r52*x1 + r65*x3)/9240
		self.ProductMomentXY += -r10*(28*r124 + r125 + r126 + r41*r95 + 42*r56)/18480 + r112*r52*(r35 + 2*y2)/18480 - 3*r127*(r14 - r51)/220 - r17*r55/8 - r23*(18*r127 + 15*r52 + 7*r55)/18480 - r24*(r116 + r122*x3 + 30*r127 + r130 + r133*x1 + r66)/18480 - r55*r73/18480 - 3*r57*y2/44 + r60*(r136*y2 + 15*r14 + 7*r17 + r4*y1 + 18*r91)/18480 + r61*(r106 + 28*r108 + r109*y1 + r110 + 2310*r24 + r51 + r80 + r85*y3 + 30*r91 + 1260*y0*y1)/18480 + r8*(-r12*r136 + 28*r13 - r22*r37 - 27*r22*x2 + 42*r79 + r82 + 18*r86*y3 + r87*y3)/18480 + x0*(r1*y0 + r103 - r104*x3 - r105*x2 - r107*x1 + r108*r25 + 84*r118*y2 - r119*r62 + r137*y3 + r138*y3 + 81*r14*x1 - r23*x3 - r3*y0 + r31*x3 + r33*x3 + r41*r92 + 21*r79 + r83*y3 - 84*r86*y0 + 189*r88*y2 + 15*r94 + 60*r97*y3)/9240 - y0*(r121*x3 + 60*r123 + 81*r131 + 15*r132 + r135 + r137*x1 + r137*x3 + r138*x3 + 21*r56 - r60*y3 + r63*y3 + r74*r8 + 189*r86*x1)/9240

if __name__ == '__main__':
	from fontTools.misc.symfont import x, y, printGreenPen
	printGreenPen('MomentsPen', [
		      ('Area', 1),
		      ('Planar1stMomentWrtX', y),
		      ('Planar1stMomentWrtY', x),
		      ('Planar2ndMomentWrtX', y**2),
		      ('Planar2ndMomentWrtY', x**2),
		      ('ProductMomentXY', x*y),
		     ])
