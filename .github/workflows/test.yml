name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    # https://github.community/t/github-actions-does-not-respect-skip-ci/17325/8
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install packages
      run: pip install tox
    - name: Run Tox
      run: tox -e mypy,package_readme

  test:
    runs-on: ${{ matrix.platform }}
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        platform: [ubuntu-latest, macos-latest, windows-latest]
        exclude: # Only test on the oldest and latest supported stable Python on macOS and Windows.
          - platform: macos-latest
            python-version: 3.7
          - platform: macos-latest
            python-version: 3.9
          - platform: windows-latest
            python-version: 3.7
          - platform: windows-latest
            python-version: 3.9
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install packages
      run: pip install tox coverage
    - name: Run Tox
      run: tox -e py-cov
    - name: Run Tox without lxml
      run: tox -e py-cov-nolxml
    - name: Produce coverage files
      run: |
        coverage combine
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  test-cython:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install packages
      run: pip install tox
    - name: Run Tox
      run: tox -e py-cy-nolxml

  test-pypy3:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python pypy3
      uses: actions/setup-python@v2
      with:
        python-version: "pypy-3.7"
    - name: Install packages
      run: pip install tox
    - name: Run Tox
      run: tox -e pypy3-nolxml

  arm64_job:
    name: Build and Test for arm64
    runs-on: ubuntu-20.04
    steps:
       - uses: actions/checkout@v2
       - name: Set up QEMU
         id: qemu
         uses: docker/setup-qemu-action@v1
       - name: Install and Run tests
         run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
             arm64v8/ubuntu:20.04 \
             bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
             python3 -m pip install virtualenv && python3 -m venv py38-venv && \
             source py38-venv/bin/activate && \
             pip install -r dev-requirements.txt && \
             pip install -r requirements.txt && \
             pip install tox coverage && \
             tox -e py-cov && \
             tox -e py-cov-nolxml && \
             deactivate'
